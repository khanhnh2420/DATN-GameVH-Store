/*
 * Created on 2023-04-28 ( 22:54:57 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */
package com.poly.entitiesForMrTu;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;

/**
 * JPA entity class for "Products"
 *
 * @author Telosys
 *
 */
@Entity
@Table(name="Products", schema="dbo", catalog="DB_4TL" )
public class Products implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY 
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="Id", nullable=false)
    private Integer    id ;

    //--- ENTITY DATA FIELDS 
    @Column(name="Name", nullable=false, length=50)
    private String     name ;

    @Column(name="Poster", nullable=false, length=50)
    private String     poster ;

    @Column(name="Thumbnail", nullable=false, length=255)
    private String     thumbnail ;

    @Column(name="Price", nullable=false)
    private Double     price ;

    @Temporal(TemporalType.DATE)
    @Column(name="CreateDate", nullable=false)
    private Date       createdate ;

    @Column(name="Available", nullable=false)
    private Boolean    available ;

    @Column(name="Source", nullable=false, length=255)
    private String     source ;

    @Column(name="Link", nullable=false, length=500)
    private String     link ;

    @Column(name="Details", nullable=false, length=500)
    private String     details ;

    @Column(name="CategoryId", nullable=false, length=4)
    private String     categoryid ;


    //--- ENTITY LINKS ( RELATIONSHIP )
    @ManyToOne
    @JoinColumn(name="CategoryId", referencedColumnName="Id", insertable=false, updatable=false)
    private Categories categories ; 

    @OneToMany(mappedBy="products")
    private List<Orderdetails> listOfOrderdetails ; 

    @OneToMany(mappedBy="products")
    private List<Blogs> listOfBlogs ; 


    /**
     * Constructor
     */
    public Products() {
		super();
    }
    
    //--- GETTERS & SETTERS FOR FIELDS
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    public void setName( String name ) {
        this.name = name ;
    }
    public String getName() {
        return this.name;
    }

    public void setPoster( String poster ) {
        this.poster = poster ;
    }
    public String getPoster() {
        return this.poster;
    }

    public void setThumbnail( String thumbnail ) {
        this.thumbnail = thumbnail ;
    }
    public String getThumbnail() {
        return this.thumbnail;
    }

    public void setPrice( Double price ) {
        this.price = price ;
    }
    public Double getPrice() {
        return this.price;
    }

    public void setCreatedate( Date createdate ) {
        this.createdate = createdate ;
    }
    public Date getCreatedate() {
        return this.createdate;
    }

    public void setAvailable( Boolean available ) {
        this.available = available ;
    }
    public Boolean getAvailable() {
        return this.available;
    }

    public void setSource( String source ) {
        this.source = source ;
    }
    public String getSource() {
        return this.source;
    }

    public void setLink( String link ) {
        this.link = link ;
    }
    public String getLink() {
        return this.link;
    }

    public void setDetails( String details ) {
        this.details = details ;
    }
    public String getDetails() {
        return this.details;
    }

    public void setCategoryid( String categoryid ) {
        this.categoryid = categoryid ;
    }
    public String getCategoryid() {
        return this.categoryid;
    }

    //--- GETTERS FOR LINKS
    public Categories getCategories() {
        return this.categories;
    } 

    public List<Orderdetails> getListOfOrderdetails() {
        return this.listOfOrderdetails;
    } 

    public List<Blogs> getListOfBlogs() {
        return this.listOfBlogs;
    } 

    //--- toString specific method
	@Override
    public String toString() { 
        StringBuilder sb = new StringBuilder(); 
        sb.append(id);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(poster);
        sb.append("|");
        sb.append(thumbnail);
        sb.append("|");
        sb.append(price);
        sb.append("|");
        sb.append(createdate);
        sb.append("|");
        sb.append(available);
        sb.append("|");
        sb.append(source);
        sb.append("|");
        sb.append(link);
        sb.append("|");
        sb.append(details);
        sb.append("|");
        sb.append(categoryid);
        return sb.toString(); 
    } 

}
